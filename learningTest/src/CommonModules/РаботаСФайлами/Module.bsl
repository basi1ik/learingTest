////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс 

Функция ПолучитьДанные()
	
	//МенеджерВТ = Новый МенеджерВременныхТаблиц;
	//Запрос = Новый Запрос; 
	//Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Вопросы.Ссылка КАК Ссылка,
	//	|	Вопросы.Наименование КАК Наименование
	//	|ИЗ
	//	|	Справочник.Вопросы КАК Вопросы
	//	|ГДЕ
	//	|	Вопросы.ЭтоГруппа = ИСТИНА
	//	|	И Вопросы.Родитель = ЗНАЧЕНИЕ(Справочник.Вопросы.ПустаяСсылка)";
	//Запрос.Выполнить(); 
	//рез = запрос.Выполнить().Выгрузить(); 
	
	Тестирования = Новый Структура("Наименование, Разделы", "", Новый Массив);  
	
	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
		"ВЫБРАТЬ
		|	Вопросы.Ссылка КАК Ссылка,
		|	Вопросы.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Вопросы КАК Вопросы
		|ГДЕ
		|	Вопросы.ЭтоГруппа = ИСТИНА
		|	И Вопросы.Родитель = ЗНАЧЕНИЕ(Справочник.Вопросы.ПустаяСсылка)";
	
	Результат1= Запрос1.Выполнить(); 
	Выборка1 = Результат1.Выбрать(); 
	
	Пока Выборка1.Следующий() Цикл 
		
		Тестирования.Наименование = Выборка1.Наименование; 		
		Запрос2 = Новый Запрос;
		Запрос2.Текст = 
			"ВЫБРАТЬ
			|	Вопросы.Ссылка КАК Ссылка,
			|	Вопросы.Наименование КАК Наименование
			|ИЗ
			|	Справочник.Вопросы КАК Вопросы
			|ГДЕ
			|	Вопросы.ЭтоГруппа = ИСТИНА
			|	И Вопросы.Родитель В (&Тесты)";  
		
		Запрос2.УстановитьПараметр("Тесты", Выборка1.Ссылка); 
		
		Результат2 = Запрос2.Выполнить(); 
		Выборка2 = Результат2.Выбрать(); 
					
		Разделы = Новый Структура("Наименование, Вопросы", "", Новый Массив); 
		Разделы.Наименование = 	Выборка2.Наименование;	
				
		Пока Выборка2.Следующий()  Цикл	
			Вопросы = Новый Структура("Вопрос, ВариантыОтвет", "", Новый Массив);							
			Запрос3 = Новый Запрос;
			Запрос3.Текст = 
				"ВЫБРАТЬ
				|	Вопросы.Вопрос КАК Вопрос,
				|	Вопросы.ВариантыОтветов.(
				|		Ссылка КАК Ссылка,
				|		НомерСтроки КАК НомерСтроки,
				|		Ответ КАК Ответ,
				|		Правильный КАК Правильный
				|	) КАК ВариантыОтветов
				|ИЗ
				|	Справочник.Вопросы КАК Вопросы
				|ГДЕ
				|	Вопросы.ЭтоГруппа = Ложь
				|	И Вопросы.Родитель В(&Разделы)";  
			
			Запрос3.УстановитьПараметр("Разделы", Выборка2.Ссылка);			
			Результат3 = Запрос3.Выполнить(); 
			Выборка3 = Результат3.Выбрать(); 
			
			Пока Выборка3.Следующий() Цикл 				
				Вопросы.Вопрос = Выборка3.Вопрос; 						
			КонецЦикла;
			
			Разделы.Вопросы.Добавить(Вопросы);
				
		КонецЦикла;
		
		Тестирования.Разделы.Добавить(Разделы);

				
	КонецЦикла;	
	
	Возврат Тестирования;
		
КонецФункции


Функция ПолучитьТестовуюСтруктуру()
	
	Структура = Новый Структура; 
	Структура.Вставить("Поле1", "Значение1"); 	
	Структура.Вставить("Поле2", "Значение2");
	Структура.Вставить("Поле3", "Значение3");
	Структура.Вставить("Поле4", "Значение4");

    Возврат Структура;
		
КонецФункции 

Функция КаталогИБ()
	
	СтрокаСоединенияИБ = СтрокаСоединенияИнформационнойБазы();
	ДлинаСтроки = СтрДлина(СтрокаСоединенияИБ);
	ПутьККаталогу = Сред(СтрокаСоединенияИБ, 7, ДлинаСтроки-8);
	Возврат ПутьККаталогу;
	
КонецФункции


Процедура ВыгрузитьПервичныеДанные() Экспорт 
	
	Данные = ПолучитьДанные();
	json = ЗначениеВJSON(Данные);
	
	ПутьКФайлу = КаталогИБ() + "\data.txt";
	Структура = ПолучитьТестовуюСтруктуру();
	//ЗаписьJSON(ПутьКФайлу, Структура);
		
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

Функция ЗначениеВJSON(Значение)  
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(, Символы.ВТаб); 
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	ЗаписатьJSON(ЗаписьJSON, Значение);
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

Функция JSONВЗначение(СтрокаJSON) 
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	СтруктураИзJSON = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	Возврат СтруктураИзJSON;    

КонецФункции 


//Процедура ЗаписьJSON(ПутьКФайлу, Структура)
//	
//	ЗаписьJSON = Новый ЗаписьJSON;
//	ЗаписьJSON.УстановитьСтроку();
//	ЗаписьJSON.ОткрытьФайл(ПутьКФайлу);
//	ЗаписатьJSON(ЗаписьJSON, Структура);		
//	СериализованнаяСтрока = ЗаписьJSON.Закрыть();
//	
//КонецПроцедуры


//Процедура ЧтениеJSON(ПутьКФайлу)
//	
//	ЧтениеJSON = Новый ЧтениеJSON;
//	ЧтениеJSON.УстановитьСтроку(); 
//	ЧтениеJSON.ОткрытьФайл(ПутьКФайлу);		
//	Структура = ПрочитатьJSON(ЧтениеJSON);	
//	ЧтениеJSON.Закрыть();
//		
//КонецПроцедуры

#КонецОбласти
